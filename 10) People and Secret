class Solution:
    def peopleAwareOfSecret(self, num_days: int, share_delay: int, forget_delay: int) -> int:
        # Initialize an array to store the number of people aware of the secret at each day
        aware = [0] * num_days

        # On the first day, only one person knows the secret
        aware[0] = 1

        # Initialize a counter variable to keep track of the total number of people who have learned the secret
        total_aware = 0

        # Loop through each day
        for day in range(1, num_days):
            # The number of people who learned the secret on this day is equal to:
            # - The number of people who knew the secret on the previous day and did not forget it yet
            # - The number of people who knew the secret before the previous day and did not forget it yet
            aware[day] = total_aware + aware[day-share_delay] - aware[day-forget_delay]

# Update the counter variable with the number of people who learned the secret on this day
            total_aware = aware[day]
            print(f"Day {day}: {aware[day]} people aware")

        # Return the number of people who knew the secret at the end of the final day
        # (taking into account that some people may have forgotten the secret by this point)
        return sum(aware[num_days-forget_delay:]) % 1000000007

